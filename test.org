* ord-mode测试
** 输入结果
   - 代码
   #+BEGIN_SRC python :results output :exports both
   print u'test'
   #+END_SRC

   - 执行结果
   #+RESULTS:
   : test
** 输出图片
   #+BEGIN_SRC ipython :session :results raw drawer :exports both :file img.png
   # %matplotlib inline
   from pandas import Series
   s = Series(range(10))
   s.plot()
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   [[file:img.png]]
   :END:
   
   #+BEGIN_SRC ipython :session :results raw drawer
   %matplotlib inline
   import matplotlib.pyplot as plt
   import numpy as np
   plt.hist(np.random.randn(20000), bins=200)
   plt.show()
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   <matplotlib.figure.Figure at 0x7f0fa05a61d0>
   :END:

   #+BEGIN_SRC ipython :session :exports both :results raw drawer
   plt.hist(np.random.randn(20000), bins=200)
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   (array([   1.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,
              1.,    1.,    0.,    0.,    1.,    2.,    1.,    1.,    0.,
              1.,    1.,    1.,    2.,    0.,    3.,    0.,    0.,    1.,
              3.,    1.,    4.,    3.,    5.,    4.,    2.,    3.,    6.,
              7.,    9.,    6.,    6.,   17.,    6.,   11.,    8.,   13.,
             14.,   18.,   18.,   16.,   21.,   24.,   30.,   35.,   36.,
             37.,   30.,   43.,   47.,   53.,   49.,   65.,   78.,   62.,
             84.,   77.,   69.,   85.,  105.,  107.,  107.,  116.,  114.,
            135.,  127.,  163.,  135.,  149.,  149.,  167.,  172.,  170.,
            183.,  195.,  206.,  179.,  188.,  220.,  237.,  258.,  235.,
            252.,  280.,  283.,  246.,  275.,  273.,  281.,  297.,  297.,
            289.,  295.,  311.,  311.,  297.,  304.,  350.,  348.,  312.,
            331.,  286.,  308.,  308.,  321.,  291.,  309.,  276.,  306.,
            288.,  287.,  265.,  257.,  279.,  294.,  241.,  238.,  224.,
            233.,  218.,  219.,  238.,  227.,  203.,  205.,  174.,  182.,
            166.,  175.,  137.,  161.,  147.,  140.,  127.,  122.,  122.,
            111.,  101.,   91.,   76.,   86.,   84.,   65.,   65.,   56.,
             59.,   51.,   54.,   48.,   47.,   41.,   37.,   31.,   26.,
             29.,   31.,   23.,   26.,   17.,   17.,   16.,   24.,   21.,
             10.,    9.,   10.,   11.,    8.,    7.,    7.,    8.,    5.,
              5.,    2.,   10.,    4.,    2.,    1.,    2.,    3.,    1.,
              1.,    3.,    3.,    2.,    3.,    1.,    0.,    2.,    1.,
              0.,    1.]),
    array([-4.20521391, -4.16605999, -4.12690608, -4.08775216, -4.04859824,
           -4.00944433, -3.97029041, -3.9311365 , -3.89198258, -3.85282867,
           -3.81367475, -3.77452084, -3.73536692, -3.69621301, -3.65705909,
           -3.61790518, -3.57875126, -3.53959735, -3.50044343, -3.46128952,
           -3.4221356 , -3.38298169, -3.34382777, -3.30467385, -3.26551994,
           -3.22636602, -3.18721211, -3.14805819, -3.10890428, -3.06975036,
           -3.03059645, -2.99144253, -2.95228862, -2.9131347 , -2.87398079,
           -2.83482687, -2.79567296, -2.75651904, -2.71736513, -2.67821121,
           -2.6390573 , -2.59990338, -2.56074946, -2.52159555, -2.48244163,
           -2.44328772, -2.4041338 , -2.36497989, -2.32582597, -2.28667206,
           -2.24751814, -2.20836423, -2.16921031, -2.1300564 , -2.09090248,
           -2.05174857, -2.01259465, -1.97344074, -1.93428682, -1.89513291,
           -1.85597899, -1.81682507, -1.77767116, -1.73851724, -1.69936333,
           -1.66020941, -1.6210555 , -1.58190158, -1.54274767, -1.50359375,
           -1.46443984, -1.42528592, -1.38613201, -1.34697809, -1.30782418,
           -1.26867026, -1.22951635, -1.19036243, -1.15120852, -1.1120546 ,
           -1.07290068, -1.03374677, -0.99459285, -0.95543894, -0.91628502,
           -0.87713111, -0.83797719, -0.79882328, -0.75966936, -0.72051545,
           -0.68136153, -0.64220762, -0.6030537 , -0.56389979, -0.52474587,
           -0.48559196, -0.44643804, -0.40728413, -0.36813021, -0.32897629,
           -0.28982238, -0.25066846, -0.21151455, -0.17236063, -0.13320672,
           -0.0940528 , -0.05489889, -0.01574497,  0.02340894,  0.06256286,
            0.10171677,  0.14087069,  0.1800246 ,  0.21917852,  0.25833243,
            0.29748635,  0.33664026,  0.37579418,  0.4149481 ,  0.45410201,
            0.49325593,  0.53240984,  0.57156376,  0.61071767,  0.64987159,
            0.6890255 ,  0.72817942,  0.76733333,  0.80648725,  0.84564116,
            0.88479508,  0.92394899,  0.96310291,  1.00225682,  1.04141074,
            1.08056465,  1.11971857,  1.15887249,  1.1980264 ,  1.23718032,
            1.27633423,  1.31548815,  1.35464206,  1.39379598,  1.43294989,
            1.47210381,  1.51125772,  1.55041164,  1.58956555,  1.62871947,
            1.66787338,  1.7070273 ,  1.74618121,  1.78533513,  1.82448904,
            1.86364296,  1.90279688,  1.94195079,  1.98110471,  2.02025862,
            2.05941254,  2.09856645,  2.13772037,  2.17687428,  2.2160282 ,
            2.25518211,  2.29433603,  2.33348994,  2.37264386,  2.41179777,
            2.45095169,  2.4901056 ,  2.52925952,  2.56841343,  2.60756735,
            2.64672127,  2.68587518,  2.7250291 ,  2.76418301,  2.80333693,
            2.84249084,  2.88164476,  2.92079867,  2.95995259,  2.9991065 ,
            3.03826042,  3.07741433,  3.11656825,  3.15572216,  3.19487608,
            3.23402999,  3.27318391,  3.31233782,  3.35149174,  3.39064566,
            3.42979957,  3.46895349,  3.5081074 ,  3.54726132,  3.58641523,
            3.62556915]),
    <a list of 200 Patch objects>)
   <matplotlib.figure.Figure at 0x7f0fa057fa10>
   :END:


** 显示公式
